package sts;

import fr.aoste.sync.SynchronousTransitionSystem;
import fr.aoste.sts.ACCSLStsBuilder;
import fr.aoste.sync.creator.FactoryHelper;
import fr.aoste.sync.Event;
import fr.aoste.sync.State;
import static fr.aoste.sync.creator.InvariantBuilder.diff;
import fr.aoste.sync.vspec.ComparisonOperator;
import static fr.aoste.sync.creator.InvariantBuilder.inv;
import static fr.aoste.sync.creator.InvariantBuilder.conjunction;

public class Aadl1 extends ACCSLStsBuilder<SynchronousTransitionSystem>
{
	private FactoryHelper helper = new FactoryHelper();
	public SynchronousTransitionSystem create()
	{
		SynchronousTransitionSystem sts = helper.createSynchronousTransitionSystem("Aadl1");
		
		Event e0 = helper.createEvent("read");
		Event e1 = helper.createEvent("control");
		Event e2 = helper.createEvent("t1");
		Event e3 = helper.createEvent("_t1");
		Event e4 = helper.createEvent("t2");
		Event e5 = helper.createEvent("_t2");
		
		State s0 = helper.createState("p0xp0xinitxp0xp0xinitxp0");
		s0.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s1 = helper.createState("p0xpixd1xp0xp0xinitxp0");
		s1.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s2 = helper.createState("pixp0xd1xpixp0xinitxp0");
		s2.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s3 = helper.createState("pixp0xd1xp0xp0xinitxp0");
		s3.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s4 = helper.createState("p0xp0xinitxp0xpixd1xp0");
		s4.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s5 = helper.createState("p0xpixd1xp0xpixd1xp0");
		s5.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s6 = helper.createState("pixp0xd1xpixpixd1xp0");
		s6.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s7 = helper.createState("pixp0xd1xp0xpixd1xp0");
		s7.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s8 = helper.createState("pixpixd1xpixp0xinitxp0");
		s8.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s9 = helper.createState("pixpixd1xp0xp0xinitxp0");
		s9.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s10 = helper.createState("pixpixd1xpixpixd1xp0");
		s10.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s11 = helper.createState("pixpixd1xp0xpixd1xp0");
		s11.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s12 = helper.createState("p0xp0xd1xpixp0xd1xpi");
		s12.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s13 = helper.createState("p0xpixd1xpixp0xd1xpi");
		s13.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s14 = helper.createState("pixp0xd1xpixp0xd1xpi");
		s14.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s15 = helper.createState("p0xp0xd1xpixp0xd1xp0");
		s15.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s16 = helper.createState("p0xpixd1xpixp0xd1xp0");
		s16.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s17 = helper.createState("pixp0xd1xpixp0xd1xp0");
		s17.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s18 = helper.createState("p0xp0xd1xp0xp0xd1xpi");
		s18.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s19 = helper.createState("p0xpixd1xp0xp0xd1xpi");
		s19.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s20 = helper.createState("pixp0xd1xp0xp0xd1xpi");
		s20.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s21 = helper.createState("p0xp0xd1xp0xp0xd1xp0");
		s21.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s22 = helper.createState("p0xpixd1xp0xp0xd1xp0");
		s22.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s23 = helper.createState("pixp0xd1xp0xp0xd1xp0");
		s23.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s24 = helper.createState("p0xp0xd1xpixpixd1xpi");
		s24.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s25 = helper.createState("p0xpixd1xpixpixd1xpi");
		s25.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s26 = helper.createState("pixp0xd1xpixpixd1xpi");
		s26.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s27 = helper.createState("p0xp0xd1xpixpixd1xp0");
		s27.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s28 = helper.createState("p0xpixd1xpixpixd1xp0");
		s28.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s29 = helper.createState("p0xp0xd1xp0xpixd1xpi");
		s29.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s30 = helper.createState("p0xpixd1xp0xpixd1xpi");
		s30.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s31 = helper.createState("pixp0xd1xp0xpixd1xpi");
		s31.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s32 = helper.createState("p0xp0xd1xp0xpixd1xp0");
		s32.setInvariant(conjunction(inv(diff(e0, e1), 0, ComparisonOperator.EQUALS), inv(diff(e2, e0), 0, ComparisonOperator.EQUALS), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s33 = helper.createState("pixpixd1xpixp0xd1xpi");
		s33.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s34 = helper.createState("pixpixd1xpixp0xd1xp0");
		s34.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s35 = helper.createState("pixpixd1xp0xp0xd1xpi");
		s35.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s36 = helper.createState("pixpixd1xp0xp0xd1xp0");
		s36.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 0, ComparisonOperator.EQUALS), inv(diff(e1, e5), 0, ComparisonOperator.EQUALS)));
		State s37 = helper.createState("pixpixd1xpixpixd1xpi");
		s37.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		State s38 = helper.createState("pixpixd1xp0xpixd1xpi");
		s38.setInvariant(conjunction(inv(diff(e0, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e2, e0), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e0, e3), 0, ComparisonOperator.EQUALS), inv(diff(e4, e1), 1, ComparisonOperator.GREATEROREQUAL), inv(diff(e1, e5), 1, ComparisonOperator.GREATEROREQUAL)));
		sts.setInitial(s0);
		
		helper.createTransition(s0, s1, e2);
		helper.createTransition(s0, s2, e0, e2);
		helper.createTransition(s0, s3, e0, e2, e3);
		helper.createTransition(s0, s4, e4);
		helper.createTransition(s0, s5, e2, e4);
		helper.createTransition(s0, s6, e0, e2, e4);
		helper.createTransition(s0, s7, e0, e2, e3, e4);
		helper.createTransition(s1, s1, e2);
		helper.createTransition(s1, s2, e0);
		helper.createTransition(s1, s8, e0, e2);
		helper.createTransition(s1, s3, e0, e3);
		helper.createTransition(s1, s9, e0, e2, e3);
		helper.createTransition(s1, s5, e4);
		helper.createTransition(s1, s5, e2, e4);
		helper.createTransition(s1, s6, e0, e4);
		helper.createTransition(s1, s10, e0, e2, e4);
		helper.createTransition(s1, s7, e0, e3, e4);
		helper.createTransition(s1, s11, e0, e2, e3, e4);
		helper.createTransition(s2, s8, e2);
		helper.createTransition(s2, s3, e3);
		helper.createTransition(s2, s9, e2, e3);
		helper.createTransition(s2, s2, e0, e2);
		helper.createTransition(s2, s2, e0, e2, e3);
		helper.createTransition(s2, s6, e4);
		helper.createTransition(s2, s10, e2, e4);
		helper.createTransition(s2, s7, e3, e4);
		helper.createTransition(s2, s11, e2, e3, e4);
		helper.createTransition(s2, s6, e0, e2, e4);
		helper.createTransition(s2, s6, e0, e2, e3, e4);
		helper.createTransition(s2, s12, e1, e4);
		helper.createTransition(s2, s13, e1, e2, e4);
		helper.createTransition(s2, s14, e0, e1, e2, e4);
		helper.createTransition(s2, s14, e0, e1, e2, e3, e4);
		helper.createTransition(s2, s12, e1, e3, e4);
		helper.createTransition(s2, s13, e1, e2, e3, e4);
		helper.createTransition(s2, s15, e1, e4, e5);
		helper.createTransition(s2, s16, e1, e2, e4, e5);
		helper.createTransition(s2, s17, e0, e1, e2, e4, e5);
		helper.createTransition(s2, s17, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s2, s15, e1, e3, e4, e5);
		helper.createTransition(s2, s16, e1, e2, e3, e4, e5);
		helper.createTransition(s3, s9, e2);
		helper.createTransition(s3, s2, e0, e2);
		helper.createTransition(s3, s3, e0, e2, e3);
		helper.createTransition(s3, s7, e4);
		helper.createTransition(s3, s11, e2, e4);
		helper.createTransition(s3, s6, e0, e2, e4);
		helper.createTransition(s3, s7, e0, e2, e3, e4);
		helper.createTransition(s3, s18, e1, e4);
		helper.createTransition(s3, s19, e1, e2, e4);
		helper.createTransition(s3, s14, e0, e1, e2, e4);
		helper.createTransition(s3, s20, e0, e1, e2, e3, e4);
		helper.createTransition(s3, s21, e1, e4, e5);
		helper.createTransition(s3, s22, e1, e2, e4, e5);
		helper.createTransition(s3, s17, e0, e1, e2, e4, e5);
		helper.createTransition(s3, s23, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s4, s5, e2);
		helper.createTransition(s4, s6, e0, e2);
		helper.createTransition(s4, s7, e0, e2, e3);
		helper.createTransition(s4, s4, e4);
		helper.createTransition(s4, s5, e2, e4);
		helper.createTransition(s4, s6, e0, e2, e4);
		helper.createTransition(s4, s7, e0, e2, e3, e4);
		helper.createTransition(s5, s5, e2);
		helper.createTransition(s5, s6, e0);
		helper.createTransition(s5, s10, e0, e2);
		helper.createTransition(s5, s7, e0, e3);
		helper.createTransition(s5, s11, e0, e2, e3);
		helper.createTransition(s5, s5, e4);
		helper.createTransition(s5, s5, e2, e4);
		helper.createTransition(s5, s6, e0, e4);
		helper.createTransition(s5, s10, e0, e2, e4);
		helper.createTransition(s5, s7, e0, e3, e4);
		helper.createTransition(s5, s11, e0, e2, e3, e4);
		helper.createTransition(s6, s10, e2);
		helper.createTransition(s6, s7, e3);
		helper.createTransition(s6, s11, e2, e3);
		helper.createTransition(s6, s6, e0, e2);
		helper.createTransition(s6, s6, e0, e2, e3);
		helper.createTransition(s6, s6, e4);
		helper.createTransition(s6, s10, e2, e4);
		helper.createTransition(s6, s7, e3, e4);
		helper.createTransition(s6, s11, e2, e3, e4);
		helper.createTransition(s6, s6, e0, e2, e4);
		helper.createTransition(s6, s6, e0, e2, e3, e4);
		helper.createTransition(s6, s12, e1);
		helper.createTransition(s6, s13, e1, e2);
		helper.createTransition(s6, s14, e0, e1, e2);
		helper.createTransition(s6, s14, e0, e1, e2, e3);
		helper.createTransition(s6, s12, e1, e3);
		helper.createTransition(s6, s13, e1, e2, e3);
		helper.createTransition(s6, s24, e1, e4);
		helper.createTransition(s6, s25, e1, e2, e4);
		helper.createTransition(s6, s26, e0, e1, e2, e4);
		helper.createTransition(s6, s26, e0, e1, e2, e3, e4);
		helper.createTransition(s6, s24, e1, e3, e4);
		helper.createTransition(s6, s25, e1, e2, e3, e4);
		helper.createTransition(s6, s15, e1, e5);
		helper.createTransition(s6, s16, e1, e2, e5);
		helper.createTransition(s6, s17, e0, e1, e2, e5);
		helper.createTransition(s6, s17, e0, e1, e2, e3, e5);
		helper.createTransition(s6, s15, e1, e3, e5);
		helper.createTransition(s6, s16, e1, e2, e3, e5);
		helper.createTransition(s6, s27, e1, e4, e5);
		helper.createTransition(s6, s28, e1, e2, e4, e5);
		helper.createTransition(s6, s6, e0, e1, e2, e4, e5);
		helper.createTransition(s6, s6, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s6, s27, e1, e3, e4, e5);
		helper.createTransition(s6, s28, e1, e2, e3, e4, e5);
		helper.createTransition(s7, s11, e2);
		helper.createTransition(s7, s6, e0, e2);
		helper.createTransition(s7, s7, e0, e2, e3);
		helper.createTransition(s7, s7, e4);
		helper.createTransition(s7, s11, e2, e4);
		helper.createTransition(s7, s6, e0, e2, e4);
		helper.createTransition(s7, s7, e0, e2, e3, e4);
		helper.createTransition(s7, s18, e1);
		helper.createTransition(s7, s19, e1, e2);
		helper.createTransition(s7, s14, e0, e1, e2);
		helper.createTransition(s7, s20, e0, e1, e2, e3);
		helper.createTransition(s7, s29, e1, e4);
		helper.createTransition(s7, s30, e1, e2, e4);
		helper.createTransition(s7, s26, e0, e1, e2, e4);
		helper.createTransition(s7, s31, e0, e1, e2, e3, e4);
		helper.createTransition(s7, s21, e1, e5);
		helper.createTransition(s7, s22, e1, e2, e5);
		helper.createTransition(s7, s17, e0, e1, e2, e5);
		helper.createTransition(s7, s23, e0, e1, e2, e3, e5);
		helper.createTransition(s7, s32, e1, e4, e5);
		helper.createTransition(s7, s5, e1, e2, e4, e5);
		helper.createTransition(s7, s6, e0, e1, e2, e4, e5);
		helper.createTransition(s7, s7, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s8, s8, e2);
		helper.createTransition(s8, s9, e3);
		helper.createTransition(s8, s9, e2, e3);
		helper.createTransition(s8, s2, e0);
		helper.createTransition(s8, s8, e0, e2);
		helper.createTransition(s8, s2, e0, e3);
		helper.createTransition(s8, s8, e0, e2, e3);
		helper.createTransition(s8, s10, e4);
		helper.createTransition(s8, s10, e2, e4);
		helper.createTransition(s8, s11, e3, e4);
		helper.createTransition(s8, s11, e2, e3, e4);
		helper.createTransition(s8, s6, e0, e4);
		helper.createTransition(s8, s10, e0, e2, e4);
		helper.createTransition(s8, s6, e0, e3, e4);
		helper.createTransition(s8, s10, e0, e2, e3, e4);
		helper.createTransition(s8, s13, e1, e4);
		helper.createTransition(s8, s13, e1, e2, e4);
		helper.createTransition(s8, s19, e1, e3, e4);
		helper.createTransition(s8, s19, e1, e2, e3, e4);
		helper.createTransition(s8, s14, e0, e1, e4);
		helper.createTransition(s8, s33, e0, e1, e2, e4);
		helper.createTransition(s8, s14, e0, e1, e3, e4);
		helper.createTransition(s8, s33, e0, e1, e2, e3, e4);
		helper.createTransition(s8, s16, e1, e4, e5);
		helper.createTransition(s8, s16, e1, e2, e4, e5);
		helper.createTransition(s8, s22, e1, e3, e4, e5);
		helper.createTransition(s8, s22, e1, e2, e3, e4, e5);
		helper.createTransition(s8, s17, e0, e1, e4, e5);
		helper.createTransition(s8, s34, e0, e1, e2, e4, e5);
		helper.createTransition(s8, s17, e0, e1, e3, e4, e5);
		helper.createTransition(s8, s34, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s9, s9, e2);
		helper.createTransition(s9, s2, e0);
		helper.createTransition(s9, s8, e0, e2);
		helper.createTransition(s9, s3, e0, e3);
		helper.createTransition(s9, s9, e0, e2, e3);
		helper.createTransition(s9, s11, e4);
		helper.createTransition(s9, s11, e2, e4);
		helper.createTransition(s9, s6, e0, e4);
		helper.createTransition(s9, s10, e0, e2, e4);
		helper.createTransition(s9, s7, e0, e3, e4);
		helper.createTransition(s9, s11, e0, e2, e3, e4);
		helper.createTransition(s9, s19, e1, e4);
		helper.createTransition(s9, s19, e1, e2, e4);
		helper.createTransition(s9, s14, e0, e1, e4);
		helper.createTransition(s9, s33, e0, e1, e2, e4);
		helper.createTransition(s9, s20, e0, e1, e3, e4);
		helper.createTransition(s9, s35, e0, e1, e2, e3, e4);
		helper.createTransition(s9, s22, e1, e4, e5);
		helper.createTransition(s9, s22, e1, e2, e4, e5);
		helper.createTransition(s9, s17, e0, e1, e4, e5);
		helper.createTransition(s9, s34, e0, e1, e2, e4, e5);
		helper.createTransition(s9, s23, e0, e1, e3, e4, e5);
		helper.createTransition(s9, s36, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s10, s10, e2);
		helper.createTransition(s10, s11, e3);
		helper.createTransition(s10, s11, e2, e3);
		helper.createTransition(s10, s6, e0);
		helper.createTransition(s10, s10, e0, e2);
		helper.createTransition(s10, s6, e0, e3);
		helper.createTransition(s10, s10, e0, e2, e3);
		helper.createTransition(s10, s10, e4);
		helper.createTransition(s10, s10, e2, e4);
		helper.createTransition(s10, s11, e3, e4);
		helper.createTransition(s10, s11, e2, e3, e4);
		helper.createTransition(s10, s6, e0, e4);
		helper.createTransition(s10, s10, e0, e2, e4);
		helper.createTransition(s10, s6, e0, e3, e4);
		helper.createTransition(s10, s10, e0, e2, e3, e4);
		helper.createTransition(s10, s33, e0, e1, e2);
		helper.createTransition(s10, s33, e0, e1, e2, e3);
		helper.createTransition(s10, s25, e1);
		helper.createTransition(s10, s25, e1, e2);
		helper.createTransition(s10, s30, e1, e3);
		helper.createTransition(s10, s30, e1, e2, e3);
		helper.createTransition(s10, s26, e0, e1);
		helper.createTransition(s10, s26, e0, e1, e3);
		helper.createTransition(s10, s25, e1, e4);
		helper.createTransition(s10, s25, e1, e2, e4);
		helper.createTransition(s10, s30, e1, e3, e4);
		helper.createTransition(s10, s30, e1, e2, e3, e4);
		helper.createTransition(s10, s26, e0, e1, e4);
		helper.createTransition(s10, s37, e0, e1, e2, e4);
		helper.createTransition(s10, s26, e0, e1, e3, e4);
		helper.createTransition(s10, s37, e0, e1, e2, e3, e4);
		helper.createTransition(s10, s34, e0, e1, e2, e5);
		helper.createTransition(s10, s34, e0, e1, e2, e3, e5);
		helper.createTransition(s10, s28, e1, e5);
		helper.createTransition(s10, s28, e1, e2, e5);
		helper.createTransition(s10, s5, e1, e3, e5);
		helper.createTransition(s10, s5, e1, e2, e3, e5);
		helper.createTransition(s10, s6, e0, e1, e5);
		helper.createTransition(s10, s6, e0, e1, e3, e5);
		helper.createTransition(s10, s28, e1, e4, e5);
		helper.createTransition(s10, s28, e1, e2, e4, e5);
		helper.createTransition(s10, s5, e1, e3, e4, e5);
		helper.createTransition(s10, s5, e1, e2, e3, e4, e5);
		helper.createTransition(s10, s6, e0, e1, e4, e5);
		helper.createTransition(s10, s10, e0, e1, e2, e4, e5);
		helper.createTransition(s10, s6, e0, e1, e3, e4, e5);
		helper.createTransition(s10, s10, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s11, s11, e2);
		helper.createTransition(s11, s6, e0);
		helper.createTransition(s11, s10, e0, e2);
		helper.createTransition(s11, s7, e0, e3);
		helper.createTransition(s11, s11, e0, e2, e3);
		helper.createTransition(s11, s11, e4);
		helper.createTransition(s11, s11, e2, e4);
		helper.createTransition(s11, s6, e0, e4);
		helper.createTransition(s11, s10, e0, e2, e4);
		helper.createTransition(s11, s7, e0, e3, e4);
		helper.createTransition(s11, s11, e0, e2, e3, e4);
		helper.createTransition(s11, s33, e0, e1, e2);
		helper.createTransition(s11, s35, e0, e1, e2, e3);
		helper.createTransition(s11, s30, e1);
		helper.createTransition(s11, s30, e1, e2);
		helper.createTransition(s11, s26, e0, e1);
		helper.createTransition(s11, s31, e0, e1, e3);
		helper.createTransition(s11, s30, e1, e4);
		helper.createTransition(s11, s30, e1, e2, e4);
		helper.createTransition(s11, s26, e0, e1, e4);
		helper.createTransition(s11, s37, e0, e1, e2, e4);
		helper.createTransition(s11, s31, e0, e1, e3, e4);
		helper.createTransition(s11, s38, e0, e1, e2, e3, e4);
		helper.createTransition(s11, s34, e0, e1, e2, e5);
		helper.createTransition(s11, s36, e0, e1, e2, e3, e5);
		helper.createTransition(s11, s5, e1, e5);
		helper.createTransition(s11, s5, e1, e2, e5);
		helper.createTransition(s11, s6, e0, e1, e5);
		helper.createTransition(s11, s7, e0, e1, e3, e5);
		helper.createTransition(s11, s5, e1, e4, e5);
		helper.createTransition(s11, s5, e1, e2, e4, e5);
		helper.createTransition(s11, s6, e0, e1, e4, e5);
		helper.createTransition(s11, s10, e0, e1, e2, e4, e5);
		helper.createTransition(s11, s7, e0, e1, e3, e4, e5);
		helper.createTransition(s11, s11, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s12, s13, e2);
		helper.createTransition(s12, s18, e3);
		helper.createTransition(s12, s19, e2, e3);
		helper.createTransition(s12, s14, e0, e2);
		helper.createTransition(s12, s14, e0, e2, e3);
		helper.createTransition(s12, s24, e4);
		helper.createTransition(s12, s25, e2, e4);
		helper.createTransition(s12, s29, e3, e4);
		helper.createTransition(s12, s30, e2, e3, e4);
		helper.createTransition(s12, s26, e0, e2, e4);
		helper.createTransition(s12, s26, e0, e2, e3, e4);
		helper.createTransition(s12, s15, e5);
		helper.createTransition(s12, s16, e2, e5);
		helper.createTransition(s12, s17, e0, e2, e5);
		helper.createTransition(s12, s17, e0, e2, e3, e5);
		helper.createTransition(s12, s27, e4, e5);
		helper.createTransition(s12, s28, e2, e4, e5);
		helper.createTransition(s12, s6, e0, e2, e4, e5);
		helper.createTransition(s12, s6, e0, e2, e3, e4, e5);
		helper.createTransition(s12, s18, e3, e5);
		helper.createTransition(s12, s19, e2, e3, e5);
		helper.createTransition(s12, s29, e3, e4, e5);
		helper.createTransition(s12, s30, e2, e3, e4, e5);
		helper.createTransition(s13, s13, e2);
		helper.createTransition(s13, s19, e3);
		helper.createTransition(s13, s19, e2, e3);
		helper.createTransition(s13, s14, e0);
		helper.createTransition(s13, s33, e0, e2);
		helper.createTransition(s13, s14, e0, e3);
		helper.createTransition(s13, s33, e0, e2, e3);
		helper.createTransition(s13, s25, e4);
		helper.createTransition(s13, s25, e2, e4);
		helper.createTransition(s13, s30, e3, e4);
		helper.createTransition(s13, s30, e2, e3, e4);
		helper.createTransition(s13, s26, e0, e4);
		helper.createTransition(s13, s37, e0, e2, e4);
		helper.createTransition(s13, s26, e0, e3, e4);
		helper.createTransition(s13, s37, e0, e2, e3, e4);
		helper.createTransition(s13, s16, e5);
		helper.createTransition(s13, s16, e2, e5);
		helper.createTransition(s13, s22, e3, e5);
		helper.createTransition(s13, s22, e2, e3, e5);
		helper.createTransition(s13, s17, e0, e5);
		helper.createTransition(s13, s34, e0, e2, e5);
		helper.createTransition(s13, s17, e0, e3, e5);
		helper.createTransition(s13, s34, e0, e2, e3, e5);
		helper.createTransition(s13, s28, e4, e5);
		helper.createTransition(s13, s28, e2, e4, e5);
		helper.createTransition(s13, s5, e3, e4, e5);
		helper.createTransition(s13, s5, e2, e3, e4, e5);
		helper.createTransition(s13, s6, e0, e4, e5);
		helper.createTransition(s13, s10, e0, e2, e4, e5);
		helper.createTransition(s13, s6, e0, e3, e4, e5);
		helper.createTransition(s13, s10, e0, e2, e3, e4, e5);
		helper.createTransition(s14, s33, e2);
		helper.createTransition(s14, s14, e0, e2);
		helper.createTransition(s14, s14, e0, e2, e3);
		helper.createTransition(s14, s14, e3);
		helper.createTransition(s14, s33, e2, e3);
		helper.createTransition(s14, s26, e4);
		helper.createTransition(s14, s37, e2, e4);
		helper.createTransition(s14, s26, e0, e2, e4);
		helper.createTransition(s14, s26, e0, e2, e3, e4);
		helper.createTransition(s14, s26, e3, e4);
		helper.createTransition(s14, s37, e2, e3, e4);
		helper.createTransition(s14, s17, e5);
		helper.createTransition(s14, s34, e2, e5);
		helper.createTransition(s14, s17, e0, e2, e5);
		helper.createTransition(s14, s17, e0, e2, e3, e5);
		helper.createTransition(s14, s17, e3, e5);
		helper.createTransition(s14, s34, e2, e3, e5);
		helper.createTransition(s14, s6, e4, e5);
		helper.createTransition(s14, s10, e2, e4, e5);
		helper.createTransition(s14, s6, e0, e2, e4, e5);
		helper.createTransition(s14, s6, e0, e2, e3, e4, e5);
		helper.createTransition(s14, s6, e3, e4, e5);
		helper.createTransition(s14, s10, e2, e3, e4, e5);
		helper.createTransition(s14, s12, e1, e4);
		helper.createTransition(s14, s13, e1, e2, e4);
		helper.createTransition(s14, s18, e1, e3, e4);
		helper.createTransition(s14, s19, e1, e2, e3, e4);
		helper.createTransition(s14, s14, e0, e1, e2, e4);
		helper.createTransition(s14, s14, e0, e1, e2, e3, e4);
		helper.createTransition(s14, s12, e1, e4, e5);
		helper.createTransition(s14, s13, e1, e2, e4, e5);
		helper.createTransition(s14, s18, e1, e3, e4, e5);
		helper.createTransition(s14, s19, e1, e2, e3, e4, e5);
		helper.createTransition(s14, s14, e0, e1, e2, e4, e5);
		helper.createTransition(s14, s14, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s15, s16, e2);
		helper.createTransition(s15, s21, e3);
		helper.createTransition(s15, s22, e2, e3);
		helper.createTransition(s15, s17, e0, e2);
		helper.createTransition(s15, s17, e0, e2, e3);
		helper.createTransition(s15, s27, e4);
		helper.createTransition(s15, s28, e2, e4);
		helper.createTransition(s15, s32, e3, e4);
		helper.createTransition(s15, s5, e2, e3, e4);
		helper.createTransition(s15, s6, e0, e2, e4);
		helper.createTransition(s15, s6, e0, e2, e3, e4);
		helper.createTransition(s16, s16, e2);
		helper.createTransition(s16, s22, e3);
		helper.createTransition(s16, s22, e2, e3);
		helper.createTransition(s16, s17, e0);
		helper.createTransition(s16, s34, e0, e2);
		helper.createTransition(s16, s17, e0, e3);
		helper.createTransition(s16, s34, e0, e2, e3);
		helper.createTransition(s16, s28, e4);
		helper.createTransition(s16, s28, e2, e4);
		helper.createTransition(s16, s5, e3, e4);
		helper.createTransition(s16, s5, e2, e3, e4);
		helper.createTransition(s16, s6, e0, e4);
		helper.createTransition(s16, s10, e0, e2, e4);
		helper.createTransition(s16, s6, e0, e3, e4);
		helper.createTransition(s16, s10, e0, e2, e3, e4);
		helper.createTransition(s17, s34, e2);
		helper.createTransition(s17, s17, e0, e2);
		helper.createTransition(s17, s17, e0, e2, e3);
		helper.createTransition(s17, s17, e3);
		helper.createTransition(s17, s34, e2, e3);
		helper.createTransition(s17, s6, e4);
		helper.createTransition(s17, s10, e2, e4);
		helper.createTransition(s17, s6, e0, e2, e4);
		helper.createTransition(s17, s6, e0, e2, e3, e4);
		helper.createTransition(s17, s6, e3, e4);
		helper.createTransition(s17, s10, e2, e3, e4);
		helper.createTransition(s17, s12, e1, e4);
		helper.createTransition(s17, s13, e1, e2, e4);
		helper.createTransition(s17, s18, e1, e3, e4);
		helper.createTransition(s17, s19, e1, e2, e3, e4);
		helper.createTransition(s17, s14, e0, e1, e2, e4);
		helper.createTransition(s17, s14, e0, e1, e2, e3, e4);
		helper.createTransition(s17, s15, e1, e4, e5);
		helper.createTransition(s17, s16, e1, e2, e4, e5);
		helper.createTransition(s17, s21, e1, e3, e4, e5);
		helper.createTransition(s17, s22, e1, e2, e3, e4, e5);
		helper.createTransition(s17, s17, e0, e1, e2, e4, e5);
		helper.createTransition(s17, s17, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s18, s19, e2);
		helper.createTransition(s18, s14, e0, e2);
		helper.createTransition(s18, s20, e0, e2, e3);
		helper.createTransition(s18, s29, e4);
		helper.createTransition(s18, s30, e2, e4);
		helper.createTransition(s18, s26, e0, e2, e4);
		helper.createTransition(s18, s31, e0, e2, e3, e4);
		helper.createTransition(s18, s21, e5);
		helper.createTransition(s18, s22, e2, e5);
		helper.createTransition(s18, s17, e0, e2, e5);
		helper.createTransition(s18, s23, e0, e2, e3, e5);
		helper.createTransition(s18, s32, e4, e5);
		helper.createTransition(s18, s5, e2, e4, e5);
		helper.createTransition(s18, s6, e0, e2, e4, e5);
		helper.createTransition(s18, s7, e0, e2, e3, e4, e5);
		helper.createTransition(s19, s19, e2);
		helper.createTransition(s19, s14, e0);
		helper.createTransition(s19, s33, e0, e2);
		helper.createTransition(s19, s20, e0, e3);
		helper.createTransition(s19, s35, e0, e2, e3);
		helper.createTransition(s19, s30, e4);
		helper.createTransition(s19, s30, e2, e4);
		helper.createTransition(s19, s26, e0, e4);
		helper.createTransition(s19, s37, e0, e2, e4);
		helper.createTransition(s19, s31, e0, e3, e4);
		helper.createTransition(s19, s38, e0, e2, e3, e4);
		helper.createTransition(s19, s22, e5);
		helper.createTransition(s19, s22, e2, e5);
		helper.createTransition(s19, s17, e0, e5);
		helper.createTransition(s19, s34, e0, e2, e5);
		helper.createTransition(s19, s23, e0, e3, e5);
		helper.createTransition(s19, s36, e0, e2, e3, e5);
		helper.createTransition(s19, s5, e4, e5);
		helper.createTransition(s19, s5, e2, e4, e5);
		helper.createTransition(s19, s6, e0, e4, e5);
		helper.createTransition(s19, s10, e0, e2, e4, e5);
		helper.createTransition(s19, s7, e0, e3, e4, e5);
		helper.createTransition(s19, s11, e0, e2, e3, e4, e5);
		helper.createTransition(s20, s35, e2);
		helper.createTransition(s20, s14, e0, e2);
		helper.createTransition(s20, s20, e0, e2, e3);
		helper.createTransition(s20, s31, e4);
		helper.createTransition(s20, s38, e2, e4);
		helper.createTransition(s20, s26, e0, e2, e4);
		helper.createTransition(s20, s31, e0, e2, e3, e4);
		helper.createTransition(s20, s23, e5);
		helper.createTransition(s20, s36, e2, e5);
		helper.createTransition(s20, s17, e0, e2, e5);
		helper.createTransition(s20, s23, e0, e2, e3, e5);
		helper.createTransition(s20, s7, e4, e5);
		helper.createTransition(s20, s11, e2, e4, e5);
		helper.createTransition(s20, s6, e0, e2, e4, e5);
		helper.createTransition(s20, s7, e0, e2, e3, e4, e5);
		helper.createTransition(s20, s18, e1, e4);
		helper.createTransition(s20, s19, e1, e2, e4);
		helper.createTransition(s20, s14, e0, e1, e2, e4);
		helper.createTransition(s20, s20, e0, e1, e2, e3, e4);
		helper.createTransition(s20, s18, e1, e4, e5);
		helper.createTransition(s20, s19, e1, e2, e4, e5);
		helper.createTransition(s20, s14, e0, e1, e2, e4, e5);
		helper.createTransition(s20, s20, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s21, s22, e2);
		helper.createTransition(s21, s17, e0, e2);
		helper.createTransition(s21, s23, e0, e2, e3);
		helper.createTransition(s21, s32, e4);
		helper.createTransition(s21, s5, e2, e4);
		helper.createTransition(s21, s6, e0, e2, e4);
		helper.createTransition(s21, s7, e0, e2, e3, e4);
		helper.createTransition(s22, s22, e2);
		helper.createTransition(s22, s17, e0);
		helper.createTransition(s22, s34, e0, e2);
		helper.createTransition(s22, s23, e0, e3);
		helper.createTransition(s22, s36, e0, e2, e3);
		helper.createTransition(s22, s5, e4);
		helper.createTransition(s22, s5, e2, e4);
		helper.createTransition(s22, s6, e0, e4);
		helper.createTransition(s22, s10, e0, e2, e4);
		helper.createTransition(s22, s7, e0, e3, e4);
		helper.createTransition(s22, s11, e0, e2, e3, e4);
		helper.createTransition(s23, s36, e2);
		helper.createTransition(s23, s17, e0, e2);
		helper.createTransition(s23, s23, e0, e2, e3);
		helper.createTransition(s23, s7, e4);
		helper.createTransition(s23, s11, e2, e4);
		helper.createTransition(s23, s6, e0, e2, e4);
		helper.createTransition(s23, s7, e0, e2, e3, e4);
		helper.createTransition(s23, s18, e1, e4);
		helper.createTransition(s23, s19, e1, e2, e4);
		helper.createTransition(s23, s14, e0, e1, e2, e4);
		helper.createTransition(s23, s20, e0, e1, e2, e3, e4);
		helper.createTransition(s23, s21, e1, e4, e5);
		helper.createTransition(s23, s22, e1, e2, e4, e5);
		helper.createTransition(s23, s17, e0, e1, e2, e4, e5);
		helper.createTransition(s23, s23, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s24, s25, e2);
		helper.createTransition(s24, s29, e3);
		helper.createTransition(s24, s30, e2, e3);
		helper.createTransition(s24, s26, e0, e2);
		helper.createTransition(s24, s26, e0, e2, e3);
		helper.createTransition(s24, s24, e4);
		helper.createTransition(s24, s25, e2, e4);
		helper.createTransition(s24, s29, e3, e4);
		helper.createTransition(s24, s30, e2, e3, e4);
		helper.createTransition(s24, s26, e0, e2, e4);
		helper.createTransition(s24, s26, e0, e2, e3, e4);
		helper.createTransition(s24, s27, e5);
		helper.createTransition(s24, s28, e2, e5);
		helper.createTransition(s24, s32, e3, e5);
		helper.createTransition(s24, s5, e2, e3, e5);
		helper.createTransition(s24, s6, e0, e2, e5);
		helper.createTransition(s24, s6, e0, e2, e3, e5);
		helper.createTransition(s24, s27, e4, e5);
		helper.createTransition(s24, s28, e2, e4, e5);
		helper.createTransition(s24, s32, e3, e4, e5);
		helper.createTransition(s24, s5, e2, e3, e4, e5);
		helper.createTransition(s24, s6, e0, e2, e4, e5);
		helper.createTransition(s24, s6, e0, e2, e3, e4, e5);
		helper.createTransition(s25, s25, e2);
		helper.createTransition(s25, s30, e3);
		helper.createTransition(s25, s30, e2, e3);
		helper.createTransition(s25, s26, e0);
		helper.createTransition(s25, s37, e0, e2);
		helper.createTransition(s25, s26, e0, e3);
		helper.createTransition(s25, s37, e0, e2, e3);
		helper.createTransition(s25, s25, e4);
		helper.createTransition(s25, s25, e2, e4);
		helper.createTransition(s25, s30, e3, e4);
		helper.createTransition(s25, s30, e2, e3, e4);
		helper.createTransition(s25, s26, e0, e4);
		helper.createTransition(s25, s37, e0, e2, e4);
		helper.createTransition(s25, s26, e0, e3, e4);
		helper.createTransition(s25, s37, e0, e2, e3, e4);
		helper.createTransition(s25, s28, e5);
		helper.createTransition(s25, s28, e2, e5);
		helper.createTransition(s25, s5, e3, e5);
		helper.createTransition(s25, s5, e2, e3, e5);
		helper.createTransition(s25, s6, e0, e5);
		helper.createTransition(s25, s10, e0, e2, e5);
		helper.createTransition(s25, s6, e0, e3, e5);
		helper.createTransition(s25, s10, e0, e2, e3, e5);
		helper.createTransition(s25, s28, e4, e5);
		helper.createTransition(s25, s28, e2, e4, e5);
		helper.createTransition(s25, s5, e3, e4, e5);
		helper.createTransition(s25, s5, e2, e3, e4, e5);
		helper.createTransition(s25, s6, e0, e4, e5);
		helper.createTransition(s25, s10, e0, e2, e4, e5);
		helper.createTransition(s25, s6, e0, e3, e4, e5);
		helper.createTransition(s25, s10, e0, e2, e3, e4, e5);
		helper.createTransition(s26, s37, e2);
		helper.createTransition(s26, s26, e0, e2);
		helper.createTransition(s26, s26, e0, e2, e3);
		helper.createTransition(s26, s26, e3);
		helper.createTransition(s26, s37, e2, e3);
		helper.createTransition(s26, s26, e4);
		helper.createTransition(s26, s37, e2, e4);
		helper.createTransition(s26, s26, e0, e2, e4);
		helper.createTransition(s26, s26, e0, e2, e3, e4);
		helper.createTransition(s26, s26, e3, e4);
		helper.createTransition(s26, s37, e2, e3, e4);
		helper.createTransition(s26, s6, e5);
		helper.createTransition(s26, s10, e2, e5);
		helper.createTransition(s26, s6, e0, e2, e5);
		helper.createTransition(s26, s6, e0, e2, e3, e5);
		helper.createTransition(s26, s6, e3, e5);
		helper.createTransition(s26, s10, e2, e3, e5);
		helper.createTransition(s26, s6, e4, e5);
		helper.createTransition(s26, s10, e2, e4, e5);
		helper.createTransition(s26, s6, e0, e2, e4, e5);
		helper.createTransition(s26, s6, e0, e2, e3, e4, e5);
		helper.createTransition(s26, s6, e3, e4, e5);
		helper.createTransition(s26, s10, e2, e3, e4, e5);
		helper.createTransition(s26, s12, e1);
		helper.createTransition(s26, s13, e1, e2);
		helper.createTransition(s26, s18, e1, e3);
		helper.createTransition(s26, s19, e1, e2, e3);
		helper.createTransition(s26, s14, e0, e1, e2);
		helper.createTransition(s26, s14, e0, e1, e2, e3);
		helper.createTransition(s26, s24, e1, e4);
		helper.createTransition(s26, s25, e1, e2, e4);
		helper.createTransition(s26, s29, e1, e3, e4);
		helper.createTransition(s26, s30, e1, e2, e3, e4);
		helper.createTransition(s26, s26, e0, e1, e2, e4);
		helper.createTransition(s26, s26, e0, e1, e2, e3, e4);
		helper.createTransition(s26, s12, e1, e5);
		helper.createTransition(s26, s13, e1, e2, e5);
		helper.createTransition(s26, s18, e1, e3, e5);
		helper.createTransition(s26, s19, e1, e2, e3, e5);
		helper.createTransition(s26, s14, e0, e1, e2, e5);
		helper.createTransition(s26, s14, e0, e1, e2, e3, e5);
		helper.createTransition(s26, s24, e1, e4, e5);
		helper.createTransition(s26, s25, e1, e2, e4, e5);
		helper.createTransition(s26, s29, e1, e3, e4, e5);
		helper.createTransition(s26, s30, e1, e2, e3, e4, e5);
		helper.createTransition(s26, s26, e0, e1, e2, e4, e5);
		helper.createTransition(s26, s26, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s27, s28, e2);
		helper.createTransition(s27, s32, e3);
		helper.createTransition(s27, s5, e2, e3);
		helper.createTransition(s27, s6, e0, e2);
		helper.createTransition(s27, s6, e0, e2, e3);
		helper.createTransition(s27, s27, e4);
		helper.createTransition(s27, s28, e2, e4);
		helper.createTransition(s27, s32, e3, e4);
		helper.createTransition(s27, s5, e2, e3, e4);
		helper.createTransition(s27, s6, e0, e2, e4);
		helper.createTransition(s27, s6, e0, e2, e3, e4);
		helper.createTransition(s28, s28, e2);
		helper.createTransition(s28, s5, e3);
		helper.createTransition(s28, s5, e2, e3);
		helper.createTransition(s28, s6, e0);
		helper.createTransition(s28, s10, e0, e2);
		helper.createTransition(s28, s6, e0, e3);
		helper.createTransition(s28, s10, e0, e2, e3);
		helper.createTransition(s28, s28, e4);
		helper.createTransition(s28, s28, e2, e4);
		helper.createTransition(s28, s5, e3, e4);
		helper.createTransition(s28, s5, e2, e3, e4);
		helper.createTransition(s28, s6, e0, e4);
		helper.createTransition(s28, s10, e0, e2, e4);
		helper.createTransition(s28, s6, e0, e3, e4);
		helper.createTransition(s28, s10, e0, e2, e3, e4);
		helper.createTransition(s29, s30, e2);
		helper.createTransition(s29, s26, e0, e2);
		helper.createTransition(s29, s31, e0, e2, e3);
		helper.createTransition(s29, s29, e4);
		helper.createTransition(s29, s30, e2, e4);
		helper.createTransition(s29, s26, e0, e2, e4);
		helper.createTransition(s29, s31, e0, e2, e3, e4);
		helper.createTransition(s29, s32, e5);
		helper.createTransition(s29, s5, e2, e5);
		helper.createTransition(s29, s6, e0, e2, e5);
		helper.createTransition(s29, s7, e0, e2, e3, e5);
		helper.createTransition(s29, s32, e4, e5);
		helper.createTransition(s29, s5, e2, e4, e5);
		helper.createTransition(s29, s6, e0, e2, e4, e5);
		helper.createTransition(s29, s7, e0, e2, e3, e4, e5);
		helper.createTransition(s30, s30, e2);
		helper.createTransition(s30, s26, e0);
		helper.createTransition(s30, s37, e0, e2);
		helper.createTransition(s30, s31, e0, e3);
		helper.createTransition(s30, s38, e0, e2, e3);
		helper.createTransition(s30, s30, e4);
		helper.createTransition(s30, s30, e2, e4);
		helper.createTransition(s30, s26, e0, e4);
		helper.createTransition(s30, s37, e0, e2, e4);
		helper.createTransition(s30, s31, e0, e3, e4);
		helper.createTransition(s30, s38, e0, e2, e3, e4);
		helper.createTransition(s30, s5, e5);
		helper.createTransition(s30, s5, e2, e5);
		helper.createTransition(s30, s6, e0, e5);
		helper.createTransition(s30, s10, e0, e2, e5);
		helper.createTransition(s30, s7, e0, e3, e5);
		helper.createTransition(s30, s11, e0, e2, e3, e5);
		helper.createTransition(s30, s5, e4, e5);
		helper.createTransition(s30, s5, e2, e4, e5);
		helper.createTransition(s30, s6, e0, e4, e5);
		helper.createTransition(s30, s10, e0, e2, e4, e5);
		helper.createTransition(s30, s7, e0, e3, e4, e5);
		helper.createTransition(s30, s11, e0, e2, e3, e4, e5);
		helper.createTransition(s31, s38, e2);
		helper.createTransition(s31, s26, e0, e2);
		helper.createTransition(s31, s31, e0, e2, e3);
		helper.createTransition(s31, s31, e4);
		helper.createTransition(s31, s38, e2, e4);
		helper.createTransition(s31, s26, e0, e2, e4);
		helper.createTransition(s31, s31, e0, e2, e3, e4);
		helper.createTransition(s31, s7, e5);
		helper.createTransition(s31, s11, e2, e5);
		helper.createTransition(s31, s6, e0, e2, e5);
		helper.createTransition(s31, s7, e0, e2, e3, e5);
		helper.createTransition(s31, s7, e4, e5);
		helper.createTransition(s31, s11, e2, e4, e5);
		helper.createTransition(s31, s6, e0, e2, e4, e5);
		helper.createTransition(s31, s7, e0, e2, e3, e4, e5);
		helper.createTransition(s31, s18, e1);
		helper.createTransition(s31, s19, e1, e2);
		helper.createTransition(s31, s14, e0, e1, e2);
		helper.createTransition(s31, s20, e0, e1, e2, e3);
		helper.createTransition(s31, s29, e1, e4);
		helper.createTransition(s31, s30, e1, e2, e4);
		helper.createTransition(s31, s26, e0, e1, e2, e4);
		helper.createTransition(s31, s31, e0, e1, e2, e3, e4);
		helper.createTransition(s31, s18, e1, e5);
		helper.createTransition(s31, s19, e1, e2, e5);
		helper.createTransition(s31, s14, e0, e1, e2, e5);
		helper.createTransition(s31, s20, e0, e1, e2, e3, e5);
		helper.createTransition(s31, s29, e1, e4, e5);
		helper.createTransition(s31, s30, e1, e2, e4, e5);
		helper.createTransition(s31, s26, e0, e1, e2, e4, e5);
		helper.createTransition(s31, s31, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s32, s5, e2);
		helper.createTransition(s32, s6, e0, e2);
		helper.createTransition(s32, s7, e0, e2, e3);
		helper.createTransition(s32, s32, e4);
		helper.createTransition(s32, s5, e2, e4);
		helper.createTransition(s32, s6, e0, e2, e4);
		helper.createTransition(s32, s7, e0, e2, e3, e4);
		helper.createTransition(s33, s33, e2);
		helper.createTransition(s33, s14, e0);
		helper.createTransition(s33, s33, e0, e2);
		helper.createTransition(s33, s14, e0, e3);
		helper.createTransition(s33, s33, e0, e2, e3);
		helper.createTransition(s33, s33, e3);
		helper.createTransition(s33, s33, e2, e3);
		helper.createTransition(s33, s37, e4);
		helper.createTransition(s33, s37, e2, e4);
		helper.createTransition(s33, s26, e0, e4);
		helper.createTransition(s33, s37, e0, e2, e4);
		helper.createTransition(s33, s26, e0, e3, e4);
		helper.createTransition(s33, s37, e0, e2, e3, e4);
		helper.createTransition(s33, s37, e3, e4);
		helper.createTransition(s33, s37, e2, e3, e4);
		helper.createTransition(s33, s34, e5);
		helper.createTransition(s33, s34, e2, e5);
		helper.createTransition(s33, s17, e0, e5);
		helper.createTransition(s33, s34, e0, e2, e5);
		helper.createTransition(s33, s17, e0, e3, e5);
		helper.createTransition(s33, s34, e0, e2, e3, e5);
		helper.createTransition(s33, s34, e3, e5);
		helper.createTransition(s33, s34, e2, e3, e5);
		helper.createTransition(s33, s10, e4, e5);
		helper.createTransition(s33, s10, e2, e4, e5);
		helper.createTransition(s33, s6, e0, e4, e5);
		helper.createTransition(s33, s10, e0, e2, e4, e5);
		helper.createTransition(s33, s6, e0, e3, e4, e5);
		helper.createTransition(s33, s10, e0, e2, e3, e4, e5);
		helper.createTransition(s33, s10, e3, e4, e5);
		helper.createTransition(s33, s10, e2, e3, e4, e5);
		helper.createTransition(s33, s13, e1, e4);
		helper.createTransition(s33, s13, e1, e2, e4);
		helper.createTransition(s33, s19, e1, e3, e4);
		helper.createTransition(s33, s19, e1, e2, e3, e4);
		helper.createTransition(s33, s14, e0, e1, e4);
		helper.createTransition(s33, s33, e0, e1, e2, e4);
		helper.createTransition(s33, s14, e0, e1, e3, e4);
		helper.createTransition(s33, s33, e0, e1, e2, e3, e4);
		helper.createTransition(s33, s13, e1, e4, e5);
		helper.createTransition(s33, s13, e1, e2, e4, e5);
		helper.createTransition(s33, s19, e1, e3, e4, e5);
		helper.createTransition(s33, s19, e1, e2, e3, e4, e5);
		helper.createTransition(s33, s14, e0, e1, e4, e5);
		helper.createTransition(s33, s33, e0, e1, e2, e4, e5);
		helper.createTransition(s33, s14, e0, e1, e3, e4, e5);
		helper.createTransition(s33, s33, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s34, s34, e2);
		helper.createTransition(s34, s17, e0);
		helper.createTransition(s34, s34, e0, e2);
		helper.createTransition(s34, s17, e0, e3);
		helper.createTransition(s34, s34, e0, e2, e3);
		helper.createTransition(s34, s34, e3);
		helper.createTransition(s34, s34, e2, e3);
		helper.createTransition(s34, s10, e4);
		helper.createTransition(s34, s10, e2, e4);
		helper.createTransition(s34, s6, e0, e4);
		helper.createTransition(s34, s10, e0, e2, e4);
		helper.createTransition(s34, s6, e0, e3, e4);
		helper.createTransition(s34, s10, e0, e2, e3, e4);
		helper.createTransition(s34, s10, e3, e4);
		helper.createTransition(s34, s10, e2, e3, e4);
		helper.createTransition(s34, s13, e1, e4);
		helper.createTransition(s34, s13, e1, e2, e4);
		helper.createTransition(s34, s19, e1, e3, e4);
		helper.createTransition(s34, s19, e1, e2, e3, e4);
		helper.createTransition(s34, s14, e0, e1, e4);
		helper.createTransition(s34, s33, e0, e1, e2, e4);
		helper.createTransition(s34, s14, e0, e1, e3, e4);
		helper.createTransition(s34, s33, e0, e1, e2, e3, e4);
		helper.createTransition(s34, s16, e1, e4, e5);
		helper.createTransition(s34, s16, e1, e2, e4, e5);
		helper.createTransition(s34, s22, e1, e3, e4, e5);
		helper.createTransition(s34, s22, e1, e2, e3, e4, e5);
		helper.createTransition(s34, s17, e0, e1, e4, e5);
		helper.createTransition(s34, s34, e0, e1, e2, e4, e5);
		helper.createTransition(s34, s17, e0, e1, e3, e4, e5);
		helper.createTransition(s34, s34, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s35, s35, e2);
		helper.createTransition(s35, s14, e0);
		helper.createTransition(s35, s33, e0, e2);
		helper.createTransition(s35, s20, e0, e3);
		helper.createTransition(s35, s35, e0, e2, e3);
		helper.createTransition(s35, s38, e4);
		helper.createTransition(s35, s38, e2, e4);
		helper.createTransition(s35, s26, e0, e4);
		helper.createTransition(s35, s37, e0, e2, e4);
		helper.createTransition(s35, s31, e0, e3, e4);
		helper.createTransition(s35, s38, e0, e2, e3, e4);
		helper.createTransition(s35, s36, e5);
		helper.createTransition(s35, s36, e2, e5);
		helper.createTransition(s35, s17, e0, e5);
		helper.createTransition(s35, s34, e0, e2, e5);
		helper.createTransition(s35, s23, e0, e3, e5);
		helper.createTransition(s35, s36, e0, e2, e3, e5);
		helper.createTransition(s35, s11, e4, e5);
		helper.createTransition(s35, s11, e2, e4, e5);
		helper.createTransition(s35, s6, e0, e4, e5);
		helper.createTransition(s35, s10, e0, e2, e4, e5);
		helper.createTransition(s35, s7, e0, e3, e4, e5);
		helper.createTransition(s35, s11, e0, e2, e3, e4, e5);
		helper.createTransition(s35, s19, e1, e4);
		helper.createTransition(s35, s19, e1, e2, e4);
		helper.createTransition(s35, s14, e0, e1, e4);
		helper.createTransition(s35, s33, e0, e1, e2, e4);
		helper.createTransition(s35, s20, e0, e1, e3, e4);
		helper.createTransition(s35, s35, e0, e1, e2, e3, e4);
		helper.createTransition(s35, s19, e1, e4, e5);
		helper.createTransition(s35, s19, e1, e2, e4, e5);
		helper.createTransition(s35, s14, e0, e1, e4, e5);
		helper.createTransition(s35, s33, e0, e1, e2, e4, e5);
		helper.createTransition(s35, s20, e0, e1, e3, e4, e5);
		helper.createTransition(s35, s35, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s36, s36, e2);
		helper.createTransition(s36, s17, e0);
		helper.createTransition(s36, s34, e0, e2);
		helper.createTransition(s36, s23, e0, e3);
		helper.createTransition(s36, s36, e0, e2, e3);
		helper.createTransition(s36, s11, e4);
		helper.createTransition(s36, s11, e2, e4);
		helper.createTransition(s36, s6, e0, e4);
		helper.createTransition(s36, s10, e0, e2, e4);
		helper.createTransition(s36, s7, e0, e3, e4);
		helper.createTransition(s36, s11, e0, e2, e3, e4);
		helper.createTransition(s36, s19, e1, e4);
		helper.createTransition(s36, s19, e1, e2, e4);
		helper.createTransition(s36, s14, e0, e1, e4);
		helper.createTransition(s36, s33, e0, e1, e2, e4);
		helper.createTransition(s36, s20, e0, e1, e3, e4);
		helper.createTransition(s36, s35, e0, e1, e2, e3, e4);
		helper.createTransition(s36, s22, e1, e4, e5);
		helper.createTransition(s36, s22, e1, e2, e4, e5);
		helper.createTransition(s36, s17, e0, e1, e4, e5);
		helper.createTransition(s36, s34, e0, e1, e2, e4, e5);
		helper.createTransition(s36, s23, e0, e1, e3, e4, e5);
		helper.createTransition(s36, s36, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s37, s37, e2);
		helper.createTransition(s37, s26, e0);
		helper.createTransition(s37, s37, e0, e2);
		helper.createTransition(s37, s26, e0, e3);
		helper.createTransition(s37, s37, e0, e2, e3);
		helper.createTransition(s37, s37, e3);
		helper.createTransition(s37, s37, e2, e3);
		helper.createTransition(s37, s37, e4);
		helper.createTransition(s37, s37, e2, e4);
		helper.createTransition(s37, s26, e0, e4);
		helper.createTransition(s37, s37, e0, e2, e4);
		helper.createTransition(s37, s26, e0, e3, e4);
		helper.createTransition(s37, s37, e0, e2, e3, e4);
		helper.createTransition(s37, s37, e3, e4);
		helper.createTransition(s37, s37, e2, e3, e4);
		helper.createTransition(s37, s10, e5);
		helper.createTransition(s37, s10, e2, e5);
		helper.createTransition(s37, s6, e0, e5);
		helper.createTransition(s37, s10, e0, e2, e5);
		helper.createTransition(s37, s6, e0, e3, e5);
		helper.createTransition(s37, s10, e0, e2, e3, e5);
		helper.createTransition(s37, s10, e3, e5);
		helper.createTransition(s37, s10, e2, e3, e5);
		helper.createTransition(s37, s10, e4, e5);
		helper.createTransition(s37, s10, e2, e4, e5);
		helper.createTransition(s37, s6, e0, e4, e5);
		helper.createTransition(s37, s10, e0, e2, e4, e5);
		helper.createTransition(s37, s6, e0, e3, e4, e5);
		helper.createTransition(s37, s10, e0, e2, e3, e4, e5);
		helper.createTransition(s37, s10, e3, e4, e5);
		helper.createTransition(s37, s10, e2, e3, e4, e5);
		helper.createTransition(s37, s33, e0, e1, e2);
		helper.createTransition(s37, s33, e0, e1, e2, e3);
		helper.createTransition(s37, s25, e1);
		helper.createTransition(s37, s25, e1, e2);
		helper.createTransition(s37, s26, e0, e1);
		helper.createTransition(s37, s26, e0, e1, e3);
		helper.createTransition(s37, s25, e1, e3);
		helper.createTransition(s37, s25, e1, e2, e3);
		helper.createTransition(s37, s25, e1, e4);
		helper.createTransition(s37, s25, e1, e2, e4);
		helper.createTransition(s37, s26, e0, e1, e4);
		helper.createTransition(s37, s37, e0, e1, e2, e4);
		helper.createTransition(s37, s26, e0, e1, e3, e4);
		helper.createTransition(s37, s37, e0, e1, e2, e3, e4);
		helper.createTransition(s37, s25, e1, e3, e4);
		helper.createTransition(s37, s25, e1, e2, e3, e4);
		helper.createTransition(s37, s33, e0, e1, e2, e5);
		helper.createTransition(s37, s33, e0, e1, e2, e3, e5);
		helper.createTransition(s37, s25, e1, e5);
		helper.createTransition(s37, s25, e1, e2, e5);
		helper.createTransition(s37, s26, e0, e1, e5);
		helper.createTransition(s37, s26, e0, e1, e3, e5);
		helper.createTransition(s37, s25, e1, e3, e5);
		helper.createTransition(s37, s25, e1, e2, e3, e5);
		helper.createTransition(s37, s25, e1, e4, e5);
		helper.createTransition(s37, s25, e1, e2, e4, e5);
		helper.createTransition(s37, s26, e0, e1, e4, e5);
		helper.createTransition(s37, s37, e0, e1, e2, e4, e5);
		helper.createTransition(s37, s26, e0, e1, e3, e4, e5);
		helper.createTransition(s37, s37, e0, e1, e2, e3, e4, e5);
		helper.createTransition(s37, s25, e1, e3, e4, e5);
		helper.createTransition(s37, s25, e1, e2, e3, e4, e5);
		helper.createTransition(s38, s38, e2);
		helper.createTransition(s38, s26, e0);
		helper.createTransition(s38, s37, e0, e2);
		helper.createTransition(s38, s31, e0, e3);
		helper.createTransition(s38, s38, e0, e2, e3);
		helper.createTransition(s38, s38, e4);
		helper.createTransition(s38, s38, e2, e4);
		helper.createTransition(s38, s26, e0, e4);
		helper.createTransition(s38, s37, e0, e2, e4);
		helper.createTransition(s38, s31, e0, e3, e4);
		helper.createTransition(s38, s38, e0, e2, e3, e4);
		helper.createTransition(s38, s11, e5);
		helper.createTransition(s38, s11, e2, e5);
		helper.createTransition(s38, s6, e0, e5);
		helper.createTransition(s38, s10, e0, e2, e5);
		helper.createTransition(s38, s7, e0, e3, e5);
		helper.createTransition(s38, s11, e0, e2, e3, e5);
		helper.createTransition(s38, s11, e4, e5);
		helper.createTransition(s38, s11, e2, e4, e5);
		helper.createTransition(s38, s6, e0, e4, e5);
		helper.createTransition(s38, s10, e0, e2, e4, e5);
		helper.createTransition(s38, s7, e0, e3, e4, e5);
		helper.createTransition(s38, s11, e0, e2, e3, e4, e5);
		helper.createTransition(s38, s33, e0, e1, e2);
		helper.createTransition(s38, s35, e0, e1, e2, e3);
		helper.createTransition(s38, s30, e1);
		helper.createTransition(s38, s30, e1, e2);
		helper.createTransition(s38, s26, e0, e1);
		helper.createTransition(s38, s31, e0, e1, e3);
		helper.createTransition(s38, s30, e1, e4);
		helper.createTransition(s38, s30, e1, e2, e4);
		helper.createTransition(s38, s26, e0, e1, e4);
		helper.createTransition(s38, s37, e0, e1, e2, e4);
		helper.createTransition(s38, s31, e0, e1, e3, e4);
		helper.createTransition(s38, s38, e0, e1, e2, e3, e4);
		helper.createTransition(s38, s33, e0, e1, e2, e5);
		helper.createTransition(s38, s35, e0, e1, e2, e3, e5);
		helper.createTransition(s38, s30, e1, e5);
		helper.createTransition(s38, s30, e1, e2, e5);
		helper.createTransition(s38, s26, e0, e1, e5);
		helper.createTransition(s38, s31, e0, e1, e3, e5);
		helper.createTransition(s38, s30, e1, e4, e5);
		helper.createTransition(s38, s30, e1, e2, e4, e5);
		helper.createTransition(s38, s26, e0, e1, e4, e5);
		helper.createTransition(s38, s37, e0, e1, e2, e4, e5);
		helper.createTransition(s38, s31, e0, e1, e3, e4, e5);
		helper.createTransition(s38, s38, e0, e1, e2, e3, e4, e5);
		
		return sts;
	}
}

